syntax = "proto3";

package meeting_package;

import "google/protobuf/timestamp.proto";

service MeetingService
{
    rpc List5AppointmentsByUserID(ListAppointmentsRequest) returns (ListAppointmentsReply);

    rpc ListPlansOfActions(ListPlansOfActionsRequest) returns (ListPlansOfActionsReply);
    rpc TogglePlansOfActionCompletion(TogglePlansOfActionCompletionRequest) returns (TogglePlansOfActionCompletionReply);
    rpc CreatePlansOfActions(CreatePlansOfActionsRequest) returns (CreatePlansOfActionsReply);
}

message ListPlansOfActionsRequest
{
    int64 userid = 1;
}

message PlansOfAction
{
    int64 id = 1;
    string content = 2;
}

message ListPlansOfActionsReply
{
    repeated PlansOfAction plansOfActions = 1;
}

message TogglePlansOfActionCompletionRequest
{
    int64 planid = 1;
}

message TogglePlansOfActionCompletionReply
{
    bool successful = 1;
}

message CreatePlansOfActionsRequest
{
    int64 menteeId = 1;
    string plansOfAction = 2;
}

message CreatePlansOfActionsReply
{
    bool successful = 1;
    optional PlansOfAction plansOfAction = 2;
}

enum ProfileType
{
    MENTEE = 0;
    MENTOR = 1;
}

message ListAppointmentsRequest
{
    int64 userid = 1;
    ProfileType profileType = 2;
}

message ListAppointmentsReply
{
    // Max length 5, assumed sorted?
    repeated Appointment appointments = 1;
}

enum AppointmentType
{
    MEETING = 0;
    WORKSHOP = 1;
}

message Appointment
{
    // If it is a meeting or workshop
    AppointmentType type = 1;
    // Name of the other person if a meeting
    string name = 2;

    google.protobuf.Timestamp start_time = 3;

    // in minutes
    int64 duration_minutes = 4;

    // The skill the workshop is on if a workshop
    string skill = 5;

    // The link to join
    string link = 6;
}
